// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	brale "mint-redeem-workflow/infra/brale"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBraleClient is a mock of BraleClient interface.
type MockBraleClient struct {
	ctrl     *gomock.Controller
	recorder *MockBraleClientMockRecorder
}

// MockBraleClientMockRecorder is the mock recorder for MockBraleClient.
type MockBraleClientMockRecorder struct {
	mock *MockBraleClient
}

// NewMockBraleClient creates a new mock instance.
func NewMockBraleClient(ctrl *gomock.Controller) *MockBraleClient {
	mock := &MockBraleClient{ctrl: ctrl}
	mock.recorder = &MockBraleClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBraleClient) EXPECT() *MockBraleClientMockRecorder {
	return m.recorder
}

// Mint mocks base method.
func (m *MockBraleClient) Mint(arg0 float64, arg1 string) (*brale.APIResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Mint", arg0, arg1)
	ret0, _ := ret[0].(*brale.APIResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Mint indicates an expected call of Mint.
func (mr *MockBraleClientMockRecorder) Mint(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Mint", reflect.TypeOf((*MockBraleClient)(nil).Mint), arg0, arg1)
}

// Redeem mocks base method.
func (m *MockBraleClient) Redeem(arg0 float64, arg1 string) (*brale.APIResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Redeem", arg0, arg1)
	ret0, _ := ret[0].(*brale.APIResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Redeem indicates an expected call of Redeem.
func (mr *MockBraleClientMockRecorder) Redeem(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Redeem", reflect.TypeOf((*MockBraleClient)(nil).Redeem), arg0, arg1)
}
